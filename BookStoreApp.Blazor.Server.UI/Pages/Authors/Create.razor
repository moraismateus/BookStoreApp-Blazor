@page "/authors/create/"
@inject NavigationManager navManager
@inject IAuthorService authorService

<h3>Create New Author</h3>
<EditForm Model="Author" OnValidSubmit="HandleCreateAuthor">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label for="firstname">First Name</label>
        <InputText @bind-Value="Author.FirstName" class="form-control" id="firstname"/>
        <ValidationMessage For="@(() => Author.FirstName)"/>
    </div>
    <div class="form-group">
        <label for="lastname">Las Name</label>
        <InputText @bind-Value="Author.LastName" class="form-control" id="lastname"/>
        <ValidationMessage For="@(() => Author.LastName)"/>
    </div>
    <div class="form-group">
        <label for="bio">Biography</label>
        <InputText @bind-Value="Author.Bio" class="form-control" id="bio" />
        <ValidationMessage For="@(() => Author.Bio)" />
    </div>

    <button class="btn btn-primary" type="submit">
        <span class="oi oi-plus"></span>
        Create Author
    </button>
    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>
</EditForm>

@code {
    private AuthorCreateDto Author = new AuthorCreateDto();

    private async Task HandleCreateAuthor()
    {
        var response = await authorService.CreateAuthor(Author);
        if(response.Success)
        {
            BackToList();
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }
}
